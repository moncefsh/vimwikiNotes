A buffer is an in-memory space where you can write and edit some text
    :bnext to go to the next buffer (:bprevious to go to the previous buffer).
    :buffer + filename. Vim can autocomplete filename with <Tab>.
    :buffer + n, where n is the buffer number. For example, typing :buffer 2 will take you to buffer #2.
    Jump to the older position in jump list with Ctrl-O and to the newer position with Ctrl-I.
    These are not buffer specific methods, but they can be used to jump between different buffers.
		    Go to the previously edited buffer with Ctrl-^.
    Once Vim creates a buffer, it will remain in your buffers list. To remove it, you can type :bdelete.
    It accepts either a buffer number or filename.
    
    

A window is a viewport on a buffer
window short-cuts:
	Ctrl-W V    Opens a new vertical split
	Ctrl-W S    Opens a new horizontal split
	Ctrl-W C    Closes a window
	Ctrl-W O    Makes the current window the only one on screen and closes other windows
	Ctrl-W H    Moves the cursor to the left window
	Ctrl-W J    Moves the cursor to the window below
	Ctrl-W K    Moves the cursor to the window upper
	Ctrl-W L    Moves the cursor to the right window
window commands:
	:vsplit filename    Split window vertically
	:split filename     Split window horizontally
	:new filename       Create new window

NT: To close the current window, you can run Ctrl-W C or type :quit. 
    When you close a window, the buffer will still be there (run :buffers to confirm this).



A tab is a collection of windows
tab does not represent an open file. When you close a tab in Vim, you are not closing a file.
You are only closing the layout. The data for those files are stored in-memory in buffers. The buffers are still there.

tab commands:
	:tabnew file.txt    Open file.txt in a new tab
	:tabclose           Close the current tab
	:tabnext            Go to next tab
	:tabprevious        Go to previous tab
	:tablast            Go to last tab
	:tabfirst           Go to first tab
	
NT: You can also run gt to go to next tab page
    You can pass count as argument to gt, where count is tab number. To go to the third tab
